// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lwc.coinmarket.api.Infrastructure.Data;

#nullable disable

namespace lwc.coinmarket.api.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("lwc.coinmarket.api.Core.CoinAggregate.Coin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("CirculatingSupply")
                        .HasColumnType("float");

                    b.Property<int>("CmcRank")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<bool>("InfiniteSupply")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<long?>("MaxSupply")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumMarketPairs")
                        .HasColumnType("int");

                    b.Property<int>("PlatformId")
                        .HasColumnType("int");

                    b.Property<int>("QuoteId")
                        .HasColumnType("int");

                    b.Property<double?>("SelfReportedCirculatingSupply")
                        .HasColumnType("float");

                    b.Property<double?>("SelfReportedMarketCap")
                        .HasColumnType("float");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalSupply")
                        .HasColumnType("float");

                    b.Property<double?>("TvlRatio")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PlatformId");

                    b.HasIndex("QuoteId");

                    b.ToTable("Coin");
                });

            modelBuilder.Entity("lwc.coinmarket.api.Core.CoinAggregate.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token_address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Platform");
                });

            modelBuilder.Entity("lwc.coinmarket.api.Core.CoinAggregate.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("USDId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("USDId");

                    b.ToTable("Quote");
                });

            modelBuilder.Entity("lwc.coinmarket.api.Core.CoinAggregate.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CoinId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoinId");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("lwc.coinmarket.api.Core.CoinAggregate.USD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("FullyDilutedMarketCap")
                        .HasColumnType("float");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<double>("MarketCap")
                        .HasColumnType("float");

                    b.Property<double>("MarketCapDominance")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange1h")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange24h")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange30d")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange60d")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange7d")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange90d")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double?>("Tvl")
                        .HasColumnType("float");

                    b.Property<double>("Volume24h")
                        .HasColumnType("float");

                    b.Property<double>("VolumeChange24h")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("USD");
                });

            modelBuilder.Entity("lwc.coinmarket.api.Core.ContributorAggregate.Contributor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Contributors");
                });

            modelBuilder.Entity("lwc.coinmarket.api.Core.CoinAggregate.Coin", b =>
                {
                    b.HasOne("lwc.coinmarket.api.Core.CoinAggregate.Platform", "Platform")
                        .WithMany()
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lwc.coinmarket.api.Core.CoinAggregate.Quote", "Quote")
                        .WithMany()
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Platform");

                    b.Navigation("Quote");
                });

            modelBuilder.Entity("lwc.coinmarket.api.Core.CoinAggregate.Quote", b =>
                {
                    b.HasOne("lwc.coinmarket.api.Core.CoinAggregate.USD", "USD")
                        .WithMany()
                        .HasForeignKey("USDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("USD");
                });

            modelBuilder.Entity("lwc.coinmarket.api.Core.CoinAggregate.Tag", b =>
                {
                    b.HasOne("lwc.coinmarket.api.Core.CoinAggregate.Coin", null)
                        .WithMany("Tags")
                        .HasForeignKey("CoinId");
                });

            modelBuilder.Entity("lwc.coinmarket.api.Core.CoinAggregate.Coin", b =>
                {
                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
